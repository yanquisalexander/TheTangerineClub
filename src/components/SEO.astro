---
import Manrope from "@fontsource-variable/manrope/files/manrope-latin-wght-normal.woff2";

import type { Preload } from "@/types/Preload";
import { SOCIAL_NETWORKS } from "@/consts/SocialNetworks";
import { MUSICS } from "@/consts/Music";

const SOCIAL_URLS = SOCIAL_NETWORKS.map((network) => network.url);

const MusicNames = MUSICS.map((music) => music.title);

interface Props {
    title: string;
    description: string;
    preload?: Array<Preload>;
    canonical?: string;
    image?: string;
    schema?: object;
}

const {
    title,
    description,
    preload,
    canonical,
    image = "https://thetangerineclub.net/images/banner.webp",
    schema,
} = Astro.props as Props;

const determineCanonicalURL = () => {
    if (Astro.url.host.includes("localhost")) return "http://localhost:4321";
    return canonical || Astro.url.pathname;
};

const canonicalURL = new URL(determineCanonicalURL(), Astro.site);

import { getTop5Requested } from "@/utils/top5Requested";

const songs = await getTop5Requested().then((songs) =>
    songs.map(
        (song) => `${song.title} by ${song.artist} (${song.timesPlayed} times)`,
    ),
);

const FAQs = [
    {
        question: "What are the Tangerine Club's original songs?",
        answer: `The Tangerine Club's original songs are: ${new Intl.ListFormat("en", { style: "long", type: "conjunction" }).format(MusicNames)}`,
    },
    {
        question:
            "What are the top 5 requested songs on The Tangerine Club live streams?",
        answer: `The top 5 requested songs are: ${new Intl.ListFormat("en", { style: "long", type: "conjunction" }).format(songs)}`,
    },
    {
        question: "Where The Tangerine Club performs live?",
        answer: "The Tangerine Club performs live on Twitch. https://twitch.tv/thetangerineclub",
    },
    {
        question: "What is The Tangerine Club's music genre?",
        answer: "The Tangerine Club's music genre is folk-pop, pop, indie, and alternative.",
    },
    {
        question: "How can I request a song to The Tangerine Club?",
        answer: "You can request a song to The Tangerine Club by joining their Twitch live streams and using the !sr command.",
    },
    {
        question: "How can I support The Tangerine Club?",
        answer: "You can support The Tangerine Club by following us on Twitch, subscribing to our channel, and sharing our music with your friends.",
    },
];
---

<title>{title}</title>

<meta charset="UTF-8" />
<meta name="description" content={description} />
<link rel="sitemap" href="/sitemap-index.xml" />

<link
    rel="preload"
    href={"/fonts/set-sail-studios-atomic-marker-regular.woff2"}
    as="font"
    type="font/woff2"
    crossorigin
/>
<link
    rel="preload"
    href={"/fonts/set-sail-studios-atomic-marker-extras.woff2"}
    as="font"
    type="font/woff2"
    crossorigin
/>

<link rel="preload" href={Manrope} as="font" type="font/woff2" crossorigin />

<script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "MusicGroup",
        name: "The Tangerine Club",
        url: "https://thetangerineclub.net",
        logo: "https://thetangerineclub.net/images/ttcLogo.webp",
        sameAs: [...SOCIAL_URLS],
    })}
/>

{
    schema && (
        <script
            is:inline
            type="application/ld+json"
            set:html={JSON.stringify(schema)}
        />
    )
}

{
    preload?.map(({ href, as, type, rel = "preload", crossorigin }) => (
        <link {rel} {href} {as} {type} {crossorigin} />
    ))
}

<link rel="canonical" href={canonicalURL} />

<meta name="viewport" content="width=device-width" />
<meta name="theme-color" content="#000000" />

<meta
    name="keywords"
    content="tangerine, club, music, band, folk-pop, pop, indie, alternative, the tangerine club, twitch, live music, ttc, axel, cynthia"
/>

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@thetangerinecl" />
<meta name="twitter:creator" content="@thetangerinecl" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.url)} />
<meta
    name="google-site-verification"
    content="oqyB3KMZv8yNVl3KoSyWqYSMnKcMRc5vKxB-bgY3Phw"
/>

<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content="The Tangerine Club" />
<meta property="og:type" content="website" />
<meta property="og:locale" content="en_US" />

<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<link rel="icon" href="/favicon.ico" />
<link rel="apple-touch-icon" href="/img/icons/apple-touch-icon.png" />

<meta name="msapplication-config" content="/browserconfig.xml" />

<!-- <script is:inline src="/registerSW.js"></script> -->
<!-- <link rel="manifest" href="/manifest.webmanifest" />
 -->

<script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "FAQPage",
        mainEntity: FAQs.map((faq) => ({
            "@type": "Question",
            name: faq.question,
            acceptedAnswer: {
                "@type": "Answer",
                text: faq.answer,
            },
        })),
    })}
/>
